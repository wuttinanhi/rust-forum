volumes:
  prod_db:
  prod_static:
  redis_data:

services:
  rustforum:
    image: rustforum
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - "DATABASE_URL=postgres://postgres:example@db/postgres"
      - "REDIS_HOST=redis"
      - "REDIS_PASSWORD=redis123"
      - "APP_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000"
      - "SMTP_HOST=UPDATE_ME"
      - "SMTP_EMAIL=UPDATE_ME"
      - "SMPTP_PASSWORD=UPDATE_ME"
      - "APP_DOMAIN_URL=http://localhost:3000"
      - "COOKIE_KEY=a_very_long_cookie_secret_a_very_long_cookie_secret_a_very_long_cookie_secret"
      - "STATIC_FILE_DIR=/app/static"
    ports:
      - "3000:3000"
    volumes:
      - "prod_static:/app/static"
      # - "./static:/app/static"

  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    volumes:
      - "prod_db:/var/lib/postgresql/data"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  redis:
    image: docker.io/bitnami/redis:7.4
    environment:
      - REDIS_PASSWORD=redis123
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    # volumes:
    #   - "redis_data:/bitnami/redis/data"
